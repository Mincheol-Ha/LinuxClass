# vscode로 도커 다루기
>> remote development 확장기능 설치
>> 원격 참색기에서 SSJ 접속 정보 생성
>> ssh ubuntu@192.168.xx.yy


# vscode로 도커 다루기
>> docker 확장기능 설치
>> 생성한 컨테이너, 다운로드한 이미지, 볼륨 목록 확인

>> 도컴 샘플 컨테이너 생성
docker run -d -p 80:80 docker/getting-started
웹브라우져 실행 ->가상머신IP

#docker compse 예제 4 - tomcat
>> cd ~/tomcat
>> docker compose up -d

웹브라우져 실행 ->가상머신IP:9090
>> 404표시 - index.jsp 없음
>> docker exec -it tomcat /bin/bash
>> mkdir > /usr/local/tomcat/webapps
>> cat > /usr/local/tomcat/webapps/ROOT/index.jsp
<%@page contentType="text/html; charset=utf-8"%>
<h1>Hello, Tomcat</h1>
<%=new java.util.Date()%>

ctrl+d

#docker compse 예제 4b - tomcat
>> 볼륨 설정 - ./webapps:/usr/local/tomcat/webapps
>> cd ~/tomcat
>> mkdir -p webapps/ROOT
>> cat webapps/ROOT/index.jsp
>> docker compose down
>> docker compose up -d

웹브라우져 실행 ->가상머신IP:9090

#Dockerfile
docker 이미지를 생성하기 위해 사용하는 스크립트 파일
베이스 이미지를 기본으로 단계별로 애플리케이션을 구성하는 요소를 포함시킴
애플리케이션 실행환경을 코드로 정의하여 재현가능한 빌드 보장

# Dockerfile 예제 1 - nginx
>> nginx 베이스 이미지에 index.html을 복사하고
실행하는 과정을 스크립트로 작성

# Dockerfile을 이용해서 도커 이미지 생성
>> cd ~/nginx2
>> docker build -t 도커허브아이디/이미지명 .
>> docker build -t 도커허브아이디/nginx . (mincheol0501)
>> docker images
>> docker run -d -p 80:80 mincheol0501/nginx
>> curl localhost

# docker 이미지를 허브에 업로드
docker login -u 도커허브아이디
>> 암호 입력

docker push 도커허브아이디/이미지명
>>docker push 도커허브아이디/nginx




















